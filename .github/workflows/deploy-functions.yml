name: Deploy Supabase Edge Functions

on:
  push:
    branches: ["main"]
    paths:
      - "supabase/functions/**"
      - ".github/workflows/deploy-functions.yml"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-functions-${{ github.ref }}
  cancel-in-progress: true

env:
  SUPABASE_TELEMETRY_DISABLED: "1"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Pin the CLI to a known-good version to avoid surprise breaking changes.
      - name: Install Supabase CLI (pinned)
        run: |
          set -euo pipefail
          curl -L https://github.com/supabase/cli/releases/download/v1.187.8/supabase_linux_amd64.tar.gz \
            | sudo tar -xz -C /usr/local/bin supabase
          supabase --version

      - name: Validate secrets & login
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -euo pipefail
          if [ -z "${SUPABASE_ACCESS_TOKEN:-}" ]; then echo "::error::Missing SUPABASE_ACCESS_TOKEN"; exit 1; fi
          if [[ "$SUPABASE_ACCESS_TOKEN" != sbp_* ]]; then echo "::error::Token must start with sbp_"; exit 1; fi
          if [ -z "${SUPABASE_PROJECT_REF:-}" ]; then echo "::error::Missing SUPABASE_PROJECT_REF"; exit 1; fi
          supabase login --token "$SUPABASE_ACCESS_TOKEN"

      # Optional: quick sanity to catch syntax errors before deploy
      - name: Deno format & type check (soft fail)
        continue-on-error: true
        run: |
          set -euo pipefail
          deno --version || (curl -fsSL https://deno.land/x/install/install.sh | sh && echo "$HOME/.deno/bin" >> $GITHUB_PATH)
          deno fmt --check supabase/functions/**/*.ts
          deno check supabase/functions/**/*.ts || true

      - name: Deploy Edge Functions
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          set -euo pipefail

          # Required functions — fail the job if any of these fail to deploy.
          required=(
            tickets
            orders
            reviews
            ops-list
            ops-update
            ticket-get
          )

          # Optional legacy/aux functions — won't fail the job if missing.
          optional=(
            auth-otp-send
            auth-otp-verify
            catalog-services
            catalog-menu
          )

          echo "Project: $SUPABASE_PROJECT_REF"
          for fn in "${required[@]}"; do
            echo "→ Deploying $fn"
            supabase functions deploy "$fn" --project-ref "$SUPABASE_PROJECT_REF" --no-verify-jwt
          done

          for fn in "${optional[@]}"; do
            echo "→ Deploying (optional) $fn"
            supabase functions deploy "$fn" --project-ref "$SUPABASE_PROJECT_REF" --no-verify-jwt || echo "   (skipped: not present)"
          done

      - name: Summary
        run: echo "✅ Supabase Edge Functions deployed to ${{ secrets.SUPABASE_PROJECT_REF }}"
